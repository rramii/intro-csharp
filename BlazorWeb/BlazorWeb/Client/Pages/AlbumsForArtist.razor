@page "/album-search"

@using BlazorWeb.Shared
@inject HttpClient Http

<h3>AlbumsForArtist</h3>

<span>Artits name</span>

<EditForm Model="@Name" OnSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText id="name" @bind-Value="Name" />

    <button type="submit">Search</button>
</EditForm>


<h2>artists:</h2>

@if (artists == null)
{
    <p><em>Loading...</em></p>
}
else
{
        <table class="artist">
            <thead>
                <tr>
                    <th>Artist Name</th>
                    <th>!!</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var a in artists)
                {
                    <tr>
                        <td>@a.Artist</td>
                        <td><button @onclick="@(e => ArtistOnClick(a.Id))" class="btn btn-info">Click for albums</button></td>
                    </tr>
                }
            </tbody>
        </table>

}

<h2>Albums</h2>
@if (albums != null)
{
    <table class="cover">
        <thead>
            <tr>
                <th>album Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var a in albums)
            {
                <tr>
                    <td>@a.Title</td>
                    <td><button @onclick="@(e => AlbumOnClick(a.Id))" class="btn btn-info">Click for tracks</button></td>
                </tr>
            }
        </tbody>
    </table>
}

 <h3>Tracks</h3>
@if (tracks != null) 
{
    <table class="cover">
        <thead>
            <tr>
                <th>album Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var a in tracks)
            {
                <tr>
                    <td>@a.name</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    string Name = "";
    List<SearchResponse> artists;
    List<AlbumsResponse> albums;
    List<TrackResponse> tracks;

    //var queryString = opts.Request.Query;
    //string Name = queryString[$search];
    //if (Name != null)
    //{
    //    string key = Name.Split(" OR ")[Name.Split(" OR ").Length - 1];
    //    albums = albums.Where(fil => fil.Id.ToString().Contains(key) || fil.Name.Contains(key));
    //}

    private async void HandleValidSubmit()
    {        
        artists = await Http.GetFromJsonAsync<List<SearchResponse>>($"api/Search/{Name}");
        this.StateHasChanged();
    }

    private async void ArtistOnClick(int artistId)
    {
        albums = await Http.GetFromJsonAsync<List<AlbumsResponse>>($"api/albums/{artistId}");
        this.StateHasChanged();
    }

    private async void AlbumOnClick(int albumId)
    {
        tracks = await Http.GetFromJsonAsync<List<TrackResponse>>($"api/Track/{albumId}");
        this.StateHasChanged();
    }
}

